@charset "UTF-8";
@import "common/var";
@import "mixins/button";
@import "mixins/mixins";
@import "mixins/utils";

@include b(button) {
  display: inline-block;
  line-height: 1;
  white-space: nowrap;
  cursor: pointer;
  background: $--color-white;
  border: $--border-width-base $--border-style-base $--border-color-base;
  color: $--color-black;
  -webkit-appearance: none;
  text-align: center;
  box-sizing: border-box;
  outline: none;
  margin: 0;
  border-radius: $--border-radius-base;
  padding: 12px 20px;
  font-size: $--font-size-base;
  transition: .1s;

  & [class*="xu-icon-"] {
    & + span {
      margin-left: 5px;
    }
  }
  @include m(medium) {
    font-size: $--font-size-base;
    border-radius: 4px;
    padding: 10px 20px;
  }
  @include m(small) {
    font-size: $--font-size-small;
    border-radius: 3px;
    padding: 9px 15px;
  }
  @include m(mini) {
    font-size: $--font-size-small;
    border-radius: 3px;
    padding: 7px 15px;
  }
  
  @include m(default) {
    &:hover,
    &:focus {
      background: adjust-color($--color-primary, $alpha: -0.9);
      border-color: adjust-color($--color-primary, $alpha: -0.2);
      color: $--color-primary;
    }
    &:active {
      
    }
    &:disabled {
      opacity: 0.5;
      cursor: not-allowed;
      background: $--color-white;
      border: $--border-width-base $--border-style-base $--border-color-base;
      color: $--color-black;
    }
    @include when(plain) {
      &:hover,
      &:focus {
        background: $--color-white;
        border-color: adjust-color($--color-primary, $alpha: -0.2);
        color: $--color-primary;
      }
      &:disabled {
        opacity: 0.5;
        cursor: not-allowed;
        background: $--color-white;
        border: $--border-width-base $--border-style-base $--border-color-base;
        color: $--color-black;
      }
    }
  }
  @include m(primary) {
    background-color: $--color-primary;
    border: $--border-width-base $--border-style-base $--color-primary;
    color: $--color-white;
    &:hover,
    &:focus {
      background: adjust-color($--color-primary, $alpha: -0.1);
      border-color: adjust-color($--color-primary, $alpha: -0.1);
      color: $--color-white;
    }
    &:disabled {
      opacity: 0.5;
      cursor: not-allowed;
      background-color: $--color-primary;
      border: $--border-width-base $--border-style-base $--color-primary;
      color: $--color-white;
    }
    @include when(plain) {
      background: adjust-color($--color-primary, $alpha: -0.9);
      border-color: adjust-color($--color-primary, $alpha: -0.2);
      color: $--color-primary;
      &:hover,
      &:focus {
        background-color: $--color-primary;
        border: $--border-width-base $--border-style-base $--color-primary;
        color: $--color-white;
      }
      &:disabled {
        background: adjust-color($--color-primary, $alpha: -0.9);
        border-color: adjust-color($--color-primary, $alpha: -0.2);
        color: $--color-primary;
      }
    }
  }
  @include m(success) {
    background-color: $--color-success;
    border: $--border-width-base $--border-style-base $--color-success;
    color: $--color-white;
    &:hover,
    &:focus {
      background: adjust-color($--color-success, $alpha: -0.1);
      border-color: adjust-color($--color-success, $alpha: -0.1);
      color: $--color-white;
    }
    &:disabled {
      opacity: 0.5;
      cursor: not-allowed;
      background-color: $--color-success;
      border: $--border-width-base $--border-style-base $--color-success;
      color: $--color-white;
    }
    @include when(plain) {
      background: adjust-color($--color-success, $alpha: -0.9);
      border-color: adjust-color($--color-success, $alpha: -0.2);
      color: $--color-success;
      &:hover,
      &:focus {
        background-color: $--color-success;
        border: $--border-width-base $--border-style-base $--color-success;
        color: $--color-white;
      }
      &:disabled {
        background: adjust-color($--color-success, $alpha: -0.9);
        border-color: adjust-color($--color-success, $alpha: -0.2);
        color: $--color-success;
      }
    }
  }
  @include m(info) {
    background-color: $--color-info;
    border: $--border-width-base $--border-style-base $--color-info;
    color: $--color-white;
    &:hover,
    &:focus {
      background: adjust-color($--color-info, $alpha: -0.1);
      border-color: adjust-color($--color-info, $alpha: -0.1);
      color: $--color-white;
    }
    &:disabled {
      opacity: 0.5;
      cursor: not-allowed;
      background-color: $--color-info;
      border: $--border-width-base $--border-style-base $--color-info;
      color: $--color-white;
    }
    @include when(plain) {
      background: adjust-color($--color-info, $alpha: -0.9);
      border-color: adjust-color($--color-info, $alpha: -0.2);
      color: $--color-info;
      &:hover,
      &:focus {
        background-color: $--color-info;
        border: $--border-width-base $--border-style-base $--color-info;
        color: $--color-white;
      }
      &:disabled {
        background: adjust-color($--color-info, $alpha: -0.9);
        border-color: adjust-color($--color-info, $alpha: -0.2);
        color: $--color-info;
      }
    }
  }
  @include m(warning) {
    background-color: $--color-warning;
    border: $--border-width-base $--border-style-base $--color-warning;
    color: $--color-white;
    &:hover,
    &:focus {
      background: adjust-color($--color-warning, $alpha: -0.1);
      border-color: adjust-color($--color-warning, $alpha: -0.1);
      color: $--color-white;
    }
    &:disabled {
      opacity: 0.5;
      cursor: not-allowed;
      background-color: $--color-warning;
      border: $--border-width-base $--border-style-base $--color-warning;
      color: $--color-white;
    }
    @include when(plain) {
      background: adjust-color($--color-warning, $alpha: -0.9);
      border-color: adjust-color($--color-warning, $alpha: -0.2);
      color: $--color-warning;
      &:hover,
      &:focus {
        background-color: $--color-warning;
        border: $--border-width-base $--border-style-base $--color-warning;
        color: $--color-white;
      }
      &:disabled {
        background: adjust-color($--color-warning, $alpha: -0.9);
        border-color: adjust-color($--color-warning, $alpha: -0.2);
        color: $--color-warning;
      }
    }
  }
  @include m(danger) {
    background-color: $--color-danger;
    border: $--border-width-base $--border-style-base $--color-danger;
    color: $--color-white;
    &:hover,
    &:focus {
      background: adjust-color($--color-danger, $alpha: -0.1);
      border-color: adjust-color($--color-danger, $alpha: -0.1);
      color: $--color-white;
    }
    &:disabled {
      opacity: 0.5;
      cursor: not-allowed;
      background-color: $--color-danger;
      border: $--border-width-base $--border-style-base $--color-danger;
      color: $--color-white;
    }
    @include when(plain) {
      background: adjust-color($--color-danger, $alpha: -0.9);
      border-color: adjust-color($--color-danger, $alpha: -0.2);
      color: $--color-danger;
      &:hover,
      &:focus {
        background-color: $--color-danger;
        border: $--border-width-base $--border-style-base $--color-danger;
        color: $--color-white;
      }
      &:disabled {
        background: adjust-color($--color-danger, $alpha: -0.9);
        border-color: adjust-color($--color-danger, $alpha: -0.2);
        color: $--color-danger;
      }
    }
  }

  @include when(round) {
    border-radius: 20px;
  }
  @include when(opacity) {
    opacity: 0.6;
  }
  @include when(shadow) {
    box-shadow: 0px 4px 12px 0px rgba(53, 86, 189, 0.3);
  }
  @include when(square) {
    border-radius: 0px
  }
  @include when(loading) {
    position: relative;
    pointer-events: none;

    &:before {
      pointer-events: none;
      content: '';
      position: absolute;
      left: -1px;
      top: -1px;
      right: -1px;
      bottom: -1px;
      border-radius: inherit;
      background-color: rgba(255,255,255,.35);
    }
  }
}